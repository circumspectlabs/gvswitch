name: Build and Release
on:
  push:
    branches:
      - 'ci/**'
    tags:
      - v**
jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { runner: macos-latest,  os: darwin,  arch: amd64, tags: netcgo        }
          - { runner: macos-latest,  os: darwin,  arch: arm64, tags: netcgo        }
          - { runner: ubuntu-latest, os: linux,   arch: amd64, env:  CGO_ENABLED=0 }
          - { runner: ubuntu-latest, os: linux,   arch: arm64, env:  CGO_ENABLED=0 }
          - { runner: ubuntu-latest, os: windows, arch: amd64, env:  CGO_ENABLED=0 }
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
          fetch-depth: 0
          fetch-tags: true
      - name: Set variables
        id: vars
        shell: bash
        run: |-
          # binary_version
          if echo "${{ github.ref_name }}" | grep -Eo '^v[0-9]+\.[0-9]+(\.[0-9]+)?$'; then
            echo "binary_version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "binary_version=$(git describe --tags $(git rev-list --tags --max-count=1))-$(echo "${{ github.ref_name }}" | tr './\\+_= ' '-')" >> $GITHUB_OUTPUT
          fi

          # go_version
          echo "go_version=$(cat go.mod | grep -E '^[ ]*go[ ][0-9\.]+$' | xargs echo | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
      - name: Build
        uses: hashicorp/actions-go-build@main
        with:
          product_name: gvswitch
          product_version: "${{ steps.vars.outputs.binary_version }}"
          go_version: "${{ steps.vars.outputs.go_version }}"
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}
          reproducible: nope
          instructions: |-
            ${{ matrix.env }} \
              go build \
                -o "$BIN_PATH" \
                -trimpath \
                -buildvcs=false \
                -tags="${{ matrix.tags }}" \
                -ldflags "
                  -s -w
                  -X 'cmd.version=$PRODUCT_VERSION'
                "
  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
          fetch-depth: 0
          fetch-tags: true
      - name: Set variables
        id: vars
        shell: bash
        run: |-
          # binary_version
          if echo "${{ github.ref_name }}" | grep -Eo '^v[0-9]+\.[0-9]+(\.[0-9]+)?$'; then
            echo "binary_version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          else
            echo "binary_version=$(git describe --tags $(git rev-list --tags --max-count=1))-$(echo "${{ github.ref_name }}" | tr './\\+_= ' '-')" >> $GITHUB_OUTPUT
          fi
          rm -rv dist || true
          mkdir -p dist
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Draft release
        uses: softprops/action-gh-release@v2
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ steps.vars.outputs.binary_version }}"
          name: "gvswitch-${{ steps.vars.outputs.binary_version }}"
          body: |-
            TODO
          files: |
            dist/**/*.zip
          fail_on_unmatched_files: true
          draft: true
          prerelease: "${{ github.ref_type == 'branch' }}"
          make_latest: "${{ github.ref_type == 'tag' }}"
